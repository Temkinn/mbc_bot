import telebot
from telebot import types
import os
import config

import requests


#–ü–æ–¥–ø–∏—Å–∫–∏
#–í–æ–ø—Ä–æ—Å—ã
#–ú–µ–Ω—é
#–°–∫–∏–¥–æ—á–∫–∞

bot = telebot.TeleBot(os.environ.get("TOKEN"))
subWeb = types.WebAppInfo(os.environ.get('subURL'))
questionWeb = types.WebAppInfo(os.environ.get('questionURL'))
menuWeb = types.WebAppInfo(os.environ.get('menuURL'))
ansWeb = types.WebAppInfo(os.environ.get('ansURL'))
api = os.environ.get("API_URL")


@bot.message_handler(commands=['start'])
def start_command(message):
    
    requests.post(f"{api}/users/add", json = {
        "id": message.from_user.id,
        "name": message.from_user.first_name,
        "username": message.from_user.username
    })
    
    requests.put(f"{api}/users/update/{message.from_user.id}", json={
        "name": message.from_user.first_name,
        "username": message.from_user.username
    })
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        
    #buttons
    menu = types.KeyboardButton("‚òï –ó–∞–≥–ª—è–Ω—É—Ç—å –≤ –º–µ–Ω—é", web_app=menuWeb)
    subscribe = types.KeyboardButton("üíå –ü–æ–¥–ø–∏—Å–∫–∏", web_app=subWeb)
    questions = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", web_app=questionWeb)
    ofquestions = types.KeyboardButton("‚ùî –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
    # add buttons to markup
    markup.add(menu, subscribe, questions,ofquestions)
    bot.send_photo(message.chat.id, types.InputFile("assets/welcome.png"), config.welcome(message.from_user.first_name), reply_markup=markup)

@bot.message_handler(commands=['message'])
def message(message):
    bot.send_message(message.chat.id, message)
    
@bot.message_handler(commands=['admin'])
def admin(message):
    print("ADMIN!!!!")
    if config.admin(message.from_user.id):
        markup = types.ReplyKeyboardMarkup(row_width=1)
        
        ans = types.KeyboardButton("/answer", web_app=ansWeb)
        news = types.KeyboardButton("/news")
        user = types.KeyboardButton("/user")
        markup.add(ans, news, user)
        bot.send_message(message.chat.id, "–í—ã –≤ —Ä–µ–∂–∏–º–µ –∞–¥–º–∏–Ω–∞", reply_markup=markup)
    
@bot.message_handler(commands=['news'])
def news(message):
    if config.admin(message.from_user.id):
        bot.send_message(message.from_user.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ—Å—Ç—å: ")
        
@bot.message_handler(content_types=['photo', 'video'])
def get_news(message):
    if config.admin(message.from_user.id):
        markup = types.InlineKeyboardMarkup()

        yes = types.InlineKeyboardButton("–î–∞", callback_data="yes")
        no = types.InlineKeyboardButton("–ù–µ—Ç", callback_data="no")
        
        markup.add(yes, no)
        
        bot.send_message(message.from_user.id, "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º —ç—Ç–æ–≥–æ –±–æ—Ç–∞?", reply_markup=markup)

        
@bot.callback_query_handler(func=lambda call: call.data == "yes")
def send_news(call):
    bot.answer_callback_query(call.id, text="–†–∞—Å—Å—ã–ª–∞—é –≤—Å–µ–º...")#
    bot.edit_message_text("–ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–ª–µ–Ω–∞!", call.from_user.id, call.message.id)
    users = requests.get(f"{api}/users").json()
    for user in users: 
        bot.copy_message(user["id"], call.from_user.id, call.message.id - 1)

@bot.callback_query_handler(func=lambda call: call.data == "no")
def send_news(call):
    bot.answer_callback_query(call.id, text="–£–¥–∞–ª—è—é...")#
    bot.delete_messages(call.from_user.id, [call.message.id, call.message.id - 1])


@bot.message_handler(commands=["user"])
def user(message):
    markup = types.InlineKeyboardMarkup(resize_keyboard=True)

    subWeb = types.WebAppInfo(config.subURL)
    questionWeb = types.WebAppInfo(config.questionURL)
    menuWeb = types.WebAppInfo(config.menuURL)
    #buttons
    menu = types.KeyboardButton("‚òï –ó–∞–≥–ª—è–Ω—É—Ç—å –≤ –º–µ–Ω—é", web_app=menuWeb)
    subscribe = types.KeyboardButton("üíå –ü–æ–¥–ø–∏—Å–∫–∏", web_app=subWeb)
    questions = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", web_app=questionWeb)
    ofquestions = types.KeyboardButton("‚ùî –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
    # add buttons to markup
    markup.add(menu, subscribe, questions,ofquestions)
    bot.send_photo(message.chat.id, types.InputFile("assets/welcome.png"), config.welcome(message.from_user.first_name), reply_markup=markup)
    
@bot.message_handler(content_types="web_app_data") #–ø–æ–ª—É—á–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ 
def answer(webMes):
    decdata = config.decode(webMes.web_app_data.data)
    print(decdata)
    if decdata[0] == 'answer':
        if webMes.from_user.id in config.admins:
            try:
                bot.send_message(int(decdata[1]), f"–û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞–Ω–Ω—ã–π –≤–∞–º–∏ –≤–æ–ø—Ä–æ—Å:\n{decdata[2]}")
                for a in config.admins:
                    bot.send_message(a, f"–û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ—Ç —á–∞—Ç–∞ {decdata[1]} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
            except telebot.apihelper.ApiTelegramException:
                bot.send_message(webMes.from_user.id, "–ù–µ –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç. –í–æ–∑–º–æ–∂–Ω–æ, —á–∞—Ç–∞ —Å —Ç–∞–∫–∏–º id –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
    elif decdata[0] == 'question':
        for a in config.admins:
            print(a)
            bot.send_message(a, f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–æ–ø—Ä–æ—Å –∏–∑ —á–∞—Ç–∞ {webMes.chat.id}:\n{decdata[1]}")
    elif decdata[0] == "subscribe":
        for a in config.admins:
            bot.send_message(a, f"{decdata[1]}")
    elif decdata[0] == "subscribe_question":
        for a in config.admins:
            bot.send_message(a, f"–í–æ–ø—Ä–æ—Å –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ!!!\n{decdata[1]}")
   #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

if __name__ == "__main__":
    bot.polling()